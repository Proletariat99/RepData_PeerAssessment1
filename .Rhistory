lse
w
w[1](x[1]-mean(x))
w[1]*(x[1]-mean(x))
sum(lse)
source('~/.active-rstudio-document', echo=TRUE)
lse
sum(lse)
mean(x)
mean(x*w)
x*w
(x*w)^2
mean((x*w)^2)
sqrt(1.247825)
0.18*2
0.18*2 -1.54 +3*0.42 + 0.95
1.03/4
w*x^2
mean(w*x^2)
w*x^2
help(I)
summation
help(summation)
??summation
source('~/.active-rstudio-document', echo=TRUE)
x
y
plot(x, y)
p <- plot(x, y)
l <- lm(p)
help(lm)
lm(x ~ y)
lines(lm(x ~ y))
lm(x ~ y)
lm(I(y - mean(y)) ~ I(x - mean(x)) - 1)
source('~/.active-rstudio-document', echo=TRUE)
lm(I(y - mean(y)) ~ I(x - mean(x)) - 1)
fit
plot(fit)
abline(fit)
source('~/.active-rstudio-document', echo=TRUE)
order(x,y)
order(x ~ y)
help(order)
order([x,y])
order(x)
order(y)
sort()
sort(x)
sort(x, by=y)
sort(x, y)
sort([x, y])
sort(x:y, by=x)
sort(x, y)
sort(x)
help(sort)
xy <- x + y
xy
xy <- x, y
xy <- c(x, y)
xy
xy <- c(x; y)
xy <- c(x:y)
xy <- data.frame(x, y)
xy
sort(xy)
sort(xy, by=x)
sort(xy, x)
sort(xy,x=x)
sort(xy,x)
sort(xy,x, y)
sort(xy, partial=FALSE)
sort(xy[,])
sort(xy,)
sort(xy[1,])
sort(xy[,1])
sort(xy[,2])
sort(xy[,])
sort(xy[,1:2])
sort(xy[,)
sort(xy[,:])
sort(xy[,1], xy[,2])
order(xy)
order(xy[,1])
xy[order(xy[,1])]
xy[order(xy[,1]),]
source('~/.active-rstudio-document', echo=TRUE)
xy[order(xy[,1]),]
xyo
plot(xyo)
abline(lm(xy))
abline(lm(xy[1,]))
abline(lm(xy[1,], xy[2,]))
abline(lm(xy))
source('~/.active-rstudio-document', echo=TRUE)
xyjo
xyo
strxyo
str(xyo)
mean(xyo[1,])
xyo[1,]
source('~/.active-rstudio-document', echo=TRUE)
I(x - mean(x))
source('~/.active-rstudio-document', echo=TRUE)
fit
source('~/.active-rstudio-document', echo=TRUE)
fit
abline(fit)
source('~/.active-rstudio-document', echo=TRUE)
abline(fit)
fit
plot(x, y)
abline(lm(x ~ y))
fit <- lm(x ~ y)
fit
source('~/.active-rstudio-document', echo=TRUE)
mtcars
source('~/.active-rstudio-document', echo=TRUE)
fit
source('~/.active-rstudio-document', echo=TRUE)
plot(wt, mpg, data=mtcars)
plot(mtcars$wt, mtcars$mpg, data=mtcars)
plot(mtcars$wt, mtcars$mpg)
source('~/.active-rstudio-document', echo=TRUE)
abline(fit)
fit
source('~/.active-rstudio-document', echo=TRUE)
sqrt(1.5)
fit
0.5 *0.5
sqrt(0.5)
x
y
cor(x, y)
fit
1.5*0.4
source('~/.active-rstudio-document', echo=TRUE)
x
help(normalize)
??normalize
x - mean(x)/std(x)
x - mean(x)/sd(x)
(x - mean(x))^2/sd(x)
x - mean(x)
x - mean(x)/max(x)
(x - mean(x))/max(x)
(x - mean(x))/sd(x)
fit <- lm(x ~ y)
source('~/.active-rstudio-document', echo=TRUE)
fit <- lm(x ~ y)
fit
help(lm)
fit <- lm(y ~ x)
source('~/.active-rstudio-document', echo=TRUE)
x <- (-2, -1, 0, 1, 2)
x <- c(-2, -1, 0, 1, 2)
y <- c(-5, -1, 2, 1, 1)
meany
mean(y)
y <- c(-5, -1, 2, 1, 2)
mean(y)
y <- c(-5, -1, 2, 1, 3)
mean(y)
source('~/.active-rstudio-document', echo=TRUE)
fit
plot(x, y)
abline(fit)
mean(x)
source('~/.active-rstudio-document', echo=TRUE)
mean(x)
source('~/.active-rstudio-document', echo=TRUE)
plot(x, y)
fit <- lm(y ~ x)
abline(fit)
fit
plot(x,y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
#xyo <- xy[order(xy[,1]),]                 # Nice order command for a data frame for future.
plot(x, y)
fit <- lm(y ~ x)
abline(fit)
fit
plot(x,y)
abline(fit)
fit <- lm(y)
fit <- lm(y ~)
fit <- lm(y ~ .)
fit <- lm(y)
abline(lm(y ~ x + 0))
plot(x, y)
fit <- lm(y ~ x + 0)
abline(fit)
fit
x
y
cor(x, y)
cor(y,x)
source('~/.active-rstudio-document', echo=TRUE)
xy
yx
yx[1]
yx[1,]
yx[2]
yx[3]
yx[4]
yx[5]
yx[6]
yx[[1]]
yx[[2]]
yx[2,2]
yx[2,1]
str(yx)
yx$coefficients[2]
yx$coefficients[1]
yx$coefficients[2]
source('~/.active-rstudio-document', echo=TRUE)
r
var(y)
var(x)
var(y)/var(x)
source('~/.active-rstudio-document', echo=TRUE)
x <- c(0.18, -1.54 ,0.42, 0.95)
w <- c(2, 1, 3, 1)
lse <- I(w*(x-0.1471^2)
)
ls
lse
sum(w*(x-0.1471)^2)
sum(w*(x-0.1.077)^2)
sum(w*(x-1.077)^2)
sum(w*(x-0.00)^2)
sum(w*(x-0.30)^2)
sum(w*(x-0.0.0025)^2)
sum(w*(x-0.0025)^2)
help(tapply)
str(mydf)
str(act)
source('~/.active-rstudio-document', echo=TRUE)
getwd
getwd()
setwd('./coursera/rr/RepData_PeerAssessment1/'
)
source('~/.active-rstudio-document', echo=TRUE)
str(myhist)
myhist
str(act)
act
str(act)
act[act$steps==NA,]
where(act[act$steps==NA,])
act[act$steps==NA,]
act
tapply(act, FUN=avg)
tapply(act, FUN=mean)
tapply(act, 5, FUN=mean)
tapply(act$steps, act$steps, FUN=mean)
tapply(act$steps, act$steps, FUN=sd)
test <- tapply(act$steps, act$steps, FUN=sd)
test
str(test)
test <- tapply(act$steps, act$steps, FUN=mean)
test
test <- apply(act$steps[act$steps==NA], act$steps[act$steps==NA], FUN=mean)
act$steps[act$steps==NA]
tapply(act$steps[act$steps==NA], FUN=mean)
tapply(act$steps[act$steps==NA+5], ,FUN=mean)
tapply(act$steps[act$steps==NA+5], act$steps[act$steps==NA],FUN=mean)
tapply(act$steps[act$steps==NA+5], act$steps[act$steps==NA-5],FUN=mean)
tapply(act$steps[act$steps==NA+5], act$steps[act$steps==NA],FUN=mean)
act$steps[act$steps==NA+5]
tapply(act$steps, act$steps, mean)
tapply(act$steps, act$steps, FUN=mean)
tapply(act$steps, act$steps, FUN=max)
tapply(act$steps, act$steps, FUN=min)
str(act)
avg
mean(act$steps)
mean(act$steps,na.rm=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mean(act$steps,na.rm=TRUE)
len
len(act$steps[act$steps==NA])
length(act$steps[act$steps==NA])
length(act$steps)
act$steps[act$steps==NA]
act$steps[act$steps==NA,]
act$steps[act$steps==NA]
length(act$steps[act$steps==NA])
dim(act$steps[act$steps==NA])
is.na(act$steps)
act$steps[is.na(act$steps)]
length(act$steps[is.na(act$steps)])
rep(o)
help(rep)
rep(x, 20)
x
rep(m, len)
len
source('~/.active-rstudio-document', echo=TRUE)
fills
source('~/.active-rstudio-document', echo=TRUE)
act$steps[is.na(act$steps)]
act$steps[1:100]
source('~/.active-rstudio-document', echo=TRUE)
length(act$steps)
hist(act$steps)
source('~/.active-rstudio-document', echo=TRUE)
dm
tapply(dm, dm, 1)
tapply(dm, dm, sum())
tapply(dm, dm, sum
)
source('~/.active-rstudio-document', echo=TRUE)
vals
length(vals)
source('~/.active-rstudio-document', echo=TRUE)
dm
factor(act$date)
unique
unique(act$date)
act[unique_date]
source('~/.active-rstudio-document', echo=TRUE)
unique_date
source('~/.active-rstudio-document', echo=TRUE)
act[ud]
act[act$date==ud]
ud
act[act$date==ud,]
act[act$date==ud, steps]
act[act$date==ud,]$steps
act[act$date==ud,]$steps == NA
is.na(act[act$date==ud,]$steps)
act$steps[is.na(act[act$date==ud,]$steps)]
help(replace)
replace(act$steps[is.na(act$steps)], 0)
replace(act$steps, is.na(act$steps),21)
replace(act$steps, is.na(act$steps), sapply(act$steps, act$date, mean))
sapply(act$steps, act$date, mean)
sapply(act$steps, act$date, FUN=mean)
source('~/.active-rstudio-document', echo=TRUE)
act$steps
source('~/.active-rstudio-document', echo=TRUE)
tapply(act$steps, act$date, FUN=mean, na.rm=TRUE)
help(mean)
source('~/.active-rstudio-document', echo=TRUE)
help(replace)
replace(act$steps, is.na(act$steps), 0)
act$steps==0
newact <- replace(act$steps, act$steps==0, tapply(act$steps[act$steps==0], act$date, mean))
act$steps[act$steps==0]
source('~/.active-rstudio-document', echo=TRUE)
act$steps
random.imp <- function(x){
missing <- is.na(act$steps)
n.missing <- sum(missing)
x.obs <- x[!missing]
imputed <- x
imputed[missing] <- sample(x.obs, n.missing, replace=TRUE)
return(imputed)
)
random.imp <- function(x){
missing <- is.na(act$steps)
n.missing <- sum(missing)
x.obs <- x[!missing]
imputed <- x
imputed[missing] <- sample(x.obs, n.missing, replace=TRUE)
return(imputed)
}
random.imp(act$steps)
random.imp(act$steps)[1:100]
n
n.missing
missing <- is.na(act$steps)
n.missing <- sum(missing)
x.obs <- x[!missing]
imputed <- x
imputed[missing] <- sample(x.obs, n.missing, replace=TRUE)
return(imputed)
missing <- is.na(act$steps)
n.missing <- sum(missing)
x.obs <- x[!missing]
imputed <- x
imputed[missing] <- sample(x.obs, n.missing, replace=TRUE)
n
n.missing
missing <- is.na(act$steps)
missing
x <- sum(missing)
x
help(lapply)
lapply(act$steps[is.na(act$steps)], act$date, mean)
lapply(act$steps[is.na(act$steps)], act$date, FUN=mean)
lapply(act$steps[is.na(act$steps)], FUN=mean)
lapply(act$steps, FUN=mean)
source('~/.active-rstudio-document', echo=TRUE)
dplyr
help(plyr)
transofrm
help(transform)
mutate(profit= replace(profit, is.na(profit), mean(profit, na.rm=TRUE)))
help(transform)
help(aggregate)
aggregate(act$steps, by=act$date, FUN=mean)
aggregate(act$steps ~ by=act$date, FUN=mean)
aggregate(act$steps ~act$date, FUN=mean)
unique(act$date)
aggregate(act$steps ~act$date, FUN=mean, na.pass)
aggregate(act$steps ~act$date, FUN=mean, na.action=pass)
aggregate(act$steps ~act$date, FUN=mean, na.action=p'pass')
aggregate(act$steps ~act$date, FUN=mean)
a <- aggregate(act$steps ~act$date, FUN=mean)
a
a[1]
a[1,1]
a[1,2]
a[,2]
source('~/.active-rstudio-document', echo=TRUE)
a <- aggregate(act$steps ~act$date, FUN=mean)dm
dm
act$steps[1:10]
ud <- unique(act$date)[1]
ud
act[ud,]
act[,ud]
act[act$date==ud,]
act[act$date==ud,]$steps
act[act$date==ud,]$steps[is.na$act$steps[act$date==ud]]
act[act$date==ud,]$steps[is.na(act$steps[act$date==ud])
)
act[act$date==ud,]$steps[is.na(act$steps[act$date==ud])]
source('~/.active-rstudio-document', echo=TRUE)
act[act$date==ud,]$steps[is.na(act$steps[act$date==ud])]
source('~/.active-rstudio-document', echo=TRUE)
mean(act$steps[act$date==ud]))
mean(act$steps[act$date==ud])
source('~/.active-rstudio-document', echo=TRUE)
mean(act$steps[act$date==ud])act
act$steps
source('~/.active-rstudio-document', echo=TRUE)
aggregate()
source('~/.active-rstudio-document', echo=TRUE)
times
help(times)
data <- read.csv("activity.csv")
dates <- as.Date(data$date, format="%Y-%m-%d")
sums <- rowsum(data$steps,dates)
times <- array(seq(from = 0, to =2355, by = 5),dim=c(472,2))
for(i in 1:472){times[i,2] = sum(data$steps[data$interval == i*5-5],na.rm=TRUE)/sum(!is.na(data$steps[data$interval == i*5-5]))}
times <- subset(times, times[,2] != "NaN")
times
help(times)
str(times)
bydate_act
by_interval_act
times
interval_steps
length(times)
length(interval_steps)
length(interval_steps) *2
dim(times)
na_act
na_act <- act
source('~/.active-rstudio-document', echo=TRUE)
na_act[i]
na_act[i,3]
na_act[1:2,3]
na_act[1:19,3]
na_act[1:19,3:4]
na_act[1:19,1:3]
source('~/.active-rstudio-document', echo=TRUE)
na_act[1:19,1:3]
interval_steps[m1]
interval_steps[,1]
interval_steps[1,]
interval_steps
match(na_act[i,3], interval_steps)
source('~/.active-rstudio-document', echo=TRUE)
interval_avg
match(na_act[i,3],interval_avg[,1])
help(match)
na_act
na_act[i,3]
na_act[i,3], interval_avg[,1]
na_act[i,3]
interval_avg[,1]
match(na_act[i,3],interval_avg[,1]
)
for(i in 1:length(unique(act$interval))){}
for(i in 1:length(unique(act$interval))){match(na_act[i,3, interval_avg[,1]])}
na_act[i,1]
interval_avg
na_act$steps
source('~/.active-rstudio-document', echo=TRUE)
na_act
nrow(na_act)
na_act[i,]
na_act[i,1]
na_act[1,1]
na_act[2,1]
na_act[3,1]
na_act
str(na_act)
source('~/.active-rstudio-document', echo=TRUE)
na_act
na_act$steps
act
act$steps
source('~/.active-rstudio-document', echo=TRUE)
times
interval_avg
times
